!function(n){var e={};function t(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return n[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=n,t.c=e,t.d=function(n,e,o){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:o})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)t.d(o,r,function(e){return n[e]}.bind(null,r));return o},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=34)}([function(n,e){n.exports.circle={dummyFunction:function(n){return`Hello ${n}!`},getCircle:function(){},getRadius:function(){}}},function(n,e){getLineCoordinates=function(n="x",e=0,t=0){return`${n} = ${t<0?[e-Math.abs(t),e]:[e,e+t]}`},n.exports.getLineCoordinates=getLineCoordinates,n.exports.lines={getLineCoordinates:getLineCoordinates}},function(n,e){n.exports.rectangle={dummyFunction:function(n){return`Hello ${n}!`},getRectangle:function(){},getRectanglePerimeter:function(){},getRectangleArea:function(){}}},function(n,e){getSquareArea=function(n){return n<0?0:Math.pow(n,2)},getSquarePerimeter=function(n){return n<0?0:4*n},getSquare=function(n){return{getSquarePerimeter:getSquarePerimeter(n),getSquareArea:getSquareArea(n)}},n.exports.square={getSquare:getSquare,getSquarePerimeter:getSquarePerimeter,getSquareArea:getSquareArea}},function(n,e){n.exports.triangle={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.pyramid={dummyFunction:function(n){return`Hello ${n}!`},getPyramid:function(){}}},function(n,e){n.exports.cone={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.crescent={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.cube={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.cuboid={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.decagon={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.dodecahedron={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.ellipse={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.ellipsoid={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.heptagon={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.hexagon={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.hexagonal_prism={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.hexagonal_pyramid={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.icosahedron={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.kite={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.nonagon={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.octagon={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.octahedron={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.parallelogram={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.pentagon={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.quadrilateral={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.rhombus={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.sphere={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.square_based_pyramid={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.tetrahedron={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.trapezium={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.trapezoid={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.triangular_based_pyramid={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e){n.exports.triangular_prism={dummyFunction:function(n){return`Hello ${n}!`}}},function(n,e,t){"use strict";t.r(e);var o=t(0),r=t(1),u=t(2),i=t(3),c=t(4),a=t(5),l=t(6),d=t(7),m=t(8),f=t(9),p=t(10),s=t(11),g=t(12),y=t(13),x=t(14),$=t(15),h=t(16),F=t(17),H=t(18),b=t(19),_=t(20),q=t(21),S=t(22),P=t(23),v=t(24),j=t(25),O=t(26),z=t(27),A=t(28),C=t(29),M=t(30),L=t(31),R=t(32),k=t(33);e.default={cone:l.cone,circle:o.circle,crescent:d.crescent,cube:m.cube,cuboid:f.cuboid,decagon:p.decagon,dodecahedron:s.dodecahedron,ellipse:g.ellipse,ellipsoid:y.ellipsoid,heptagon:x.heptagon,hexagon:$.hexagon,hexagonal_prism:h.hexagonal_prism,hexagonal_pyramid:F.hexagonal_pyramid,icosahedron:H.icosahedron,kite:b.kite,lines:r.lines,nonagon:_.nonagon,octagon:q.octagon,octahedron:S.octahedron,parallelogram:P.parallelogram,pentagon:v.pentagon,pyramid:a.pyramid,quadrilateral:j.quadrilateral,rectangle:u.rectangle,rhombus:O.rhombus,sphere:z.sphere,square:i.square,square_based_pyramid:A.square_based_pyramid,tetrahedron:C.tetrahedron,trapezium:M.trapezium,trapezoid:L.trapezoid,triangle:c.triangle,triangular_based_pyramid:R.triangular_based_pyramid,triangular_prism:k.triangular_prism}}]);